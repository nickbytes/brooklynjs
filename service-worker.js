"use strict";var precacheConfig=[["/brooklynjs/index.html","dbadb35758d51a208044f1118682b03b"],["/brooklynjs/static/css/main.4dd734d0.css","32a5063b38085b25d52ee81b2588fa84"],["/brooklynjs/static/js/main.3c2518e7.js","ab2eb0d615512ee0f39c11617ab1f302"],["/brooklynjs/static/media/1.ed6e3e72.png","ed6e3e72cb4395fce967c78bfabedb22"],["/brooklynjs/static/media/10.1d47ca1a.png","1d47ca1af594ec77f79e4f584b1f9b88"],["/brooklynjs/static/media/11.e0c47234.png","e0c4723459dfb0f98837651a79d69462"],["/brooklynjs/static/media/12.277d8698.png","277d8698c3914e08fb9cca4151404069"],["/brooklynjs/static/media/2.20a1ef41.png","20a1ef412c26949ba68098ae7985a75b"],["/brooklynjs/static/media/3.c30c6fdd.png","c30c6fdd1d167244070fb79c54823984"],["/brooklynjs/static/media/4.99f7c70f.png","99f7c70f07d7a50f6ddca219e459ae4a"],["/brooklynjs/static/media/5.183b6f03.png","183b6f03af967d68eb65e60151b3c3f3"],["/brooklynjs/static/media/6.268fa11d.png","268fa11d40b8b434c26e09512abd8eb7"],["/brooklynjs/static/media/7.d0951818.png","d0951818545e1eb82f1dca824d95d4f4"],["/brooklynjs/static/media/8.a9592593.png","a9592593e67f00d36983b2eb9f84c7a6"],["/brooklynjs/static/media/9.e50d4673.png","e50d46735fb851085fed00dedc48fb17"],["/brooklynjs/static/media/badge.0b717a59.png","0b717a5926748e396faf82f961fd08d4"],["/brooklynjs/static/media/lovesong.966fca3d.png","966fca3da1d0d7e9421d3b3ffb20ab7d"],["/brooklynjs/static/media/thinking.0790209c.png","0790209c38b9bfec124fbc84d227b17c"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,n){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=n),t.toString()},cleanResponse=function(n){return n.redirected?("body"in n?Promise.resolve(n.body):n.blob()).then(function(e){return new Response(e,{headers:n.headers,status:n.status,statusText:n.statusText})}):Promise.resolve(n)},createCacheKey=function(e,n,t,a){var r=new URL(e);return a&&r.pathname.match(a)||(r.search+=(r.search?"&":"")+encodeURIComponent(n)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,n){if(0===e.length)return!0;var t=new URL(n).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var n=new URL(e);return n.hash="",n.search=n.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(n){return t.every(function(e){return!e.test(n[0])})}).map(function(e){return e.join("=")}).join("&"),n.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var n=e[0],t=e[1],a=new URL(n,self.location),r=createCacheKey(a,hashParamName,t,/\.\w{8}\./);return[a.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(a){return setOfCachedUrls(a).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(n){if(!t.has(n)){var e=new Request(n,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+n+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return a.put(n,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(n){return n.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return n.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(n){if("GET"===n.request.method){var e,t=stripIgnoredUrlParameters(n.request.url,ignoreUrlParametersMatching),a="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,a),e=urlsToCacheKeys.has(t));var r="/brooklynjs/index.html";!e&&"navigate"===n.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],n.request.url)&&(t=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&n.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',n.request.url,e),fetch(n.request)}))}});